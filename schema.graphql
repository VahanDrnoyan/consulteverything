### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""this is acccount"""
type Account {
  id: ID!
  session_state: String
  user: User!
}

type Consultancy {
  User: User!
  allow_age_check: Field!
  allow_email_check: Field!
  allow_enable_video_by_requester: Boolean!
  allow_expectations_check: Field!
  allow_expertise_in_problem_field_check: Field!
  allow_gender_check: Field!
  allow_name_surname: Field!
  allow_ongoing_support_check: Field!
  allow_previous_consultancy_experience_check: Field!
  allow_profession_check: Field!
  allow_time_spent_issue_resolution_check: Field!
  created_at: Time
  enable_video_by_provider: Boolean!
  id: ID!
  isActive: Boolean!
  last_requested_at: Time
  long_description: String
  max_attachment_count: Int!
  max_time_minuets: Int!
  short_description: String!
  tags: [Tag!]!
  title: String!
}

type ConsultancyById {
  data: Consultancy!
  id: String!
}

type ConsultancyConnection {
  edges: [ConsultancyEdge]
  pageInfo: PageInfo
}

input ConsultancyDataType {
  allow_age_check: Field!
  allow_email_check: Field!
  allow_enable_video_by_requester: Boolean!
  allow_expectations_check: Field!
  allow_expertise_in_problem_field_check: Field!
  allow_gender_check: Field!
  allow_name_surname: Field!
  allow_ongoing_support_check: Field!
  allow_previous_consultancy_experience_check: Field!
  allow_profession_check: Field!
  allow_time_spent_issue_resolution_check: Field!
  created_at: Time
  enable_video_by_provider: Boolean!
  isActive: Boolean!
  long_description: String
  max_attachment_count: Int!
  max_time_minuets: Int!
  short_description: String!
  tags: [TagInputType!]!
  title: String!
}

type ConsultancyEdge {
  cursor: String
  node: Consultancy
}

input ConsultancyPaginationInput {
  cursor: String
  limit: Int!
}

type Event {
  id: ID!
}

"""Form fields types"""
enum Field {
  EXCLUDE
  INCLUDE
  REQUIRED
}

type Mutation {
  createConsultancy(data: ConsultancyDataType!): Consultancy
  createUser(email: String!): User!
  deleteConsultancy(id: ID!): Consultancy
  updateConsultancy(data: ConsultancyDataType!, id: ID!): Consultancy
}

type PageInfo {
  endCursor: String
  hasNextPage: Int
}

type Query {
  consultancies(pagination: ConsultancyPaginationInput): ConsultancyConnection
  getConsultancyById(id: ID!): ConsultancyById
  getMyConsultancies(limit: Int!, offset: Int!): [Consultancy]
  totalConsultancies: TotalConsultanciesObject
}

"""User Roles"""
enum Role {
  ADMIN
  MODERATOR
  SUPERADMIN
  USER
}

"""Tag"""
type Tag {
  id: Int!
  name: String!
}

input TagInputType {
  id: Int!
  name: String!
}

"""Date custom scalar type"""
scalar Time

type TotalConsultanciesObject {
  total: Int
}

"""this is User"""
type User {
  accounts: [Account!]!
  email: String
  id: ID!
  name: String
  role: Role!
}
